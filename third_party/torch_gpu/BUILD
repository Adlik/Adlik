load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "torch_gpu",
    srcs = [
        "lib/libbackend_with_compiler.so",
        "lib/libc10.so",
        "lib/libc10_cuda.so",
        "lib/libc10d_cuda_test.so",
        "lib/libcublas-2854e16e.so.11",
        "lib/libcublasLt-b015978e.so.11",
        "lib/libcudart-45da57e3.so.11.0",
        "lib/libcudnn.so.8",
        "lib/libcudnn_adv_infer.so.8",
        "lib/libcudnn_adv_train.so.8",
        "lib/libcudnn_cnn_infer.so.8",
        "lib/libcudnn_cnn_train.so.8",
        "lib/libcudnn_ops_infer.so.8",
        "lib/libcudnn_ops_train.so.8",
        "lib/libgomp-52f2fd74.so.1",
        "lib/libjitbackend_test.so",
        "lib/libnnapi_backend.so",
        "lib/libnvToolsExt-847d78f2.so.1",
        "lib/libnvrtc-4dd39364.so.11.2",
        "lib/libnvrtc-builtins-fed02928.so.11.6",
        "lib/libshm.so",
        "lib/libtorch.so",
        "lib/libtorch_cpu.so",
        "lib/libtorch_cuda.so",
        "lib/libtorch_cuda_cpp.so",
        "lib/libtorch_cuda_cu.so",
        "lib/libtorch_cuda_linalg.so",
        "lib/libtorch_global_deps.so",
        "lib/libtorchbind_test.so",
    ],
    hdrs = glob(["include/**/*.h"]),
    copts = ["-D_GLIBCXX_USE_CXX11_ABI=1"],
    includes = [
        "include",
        "include/THC",
        "include/torch/csrc/api/include",
    ],
    linkopts = [
        "-ltorch",
        "-lc10",
        "-ltorch_cpu",
        "-ltorch_cuda",
        "-lc10_cuda",
    ],
    visibility = ["//visibility:public"],
)
