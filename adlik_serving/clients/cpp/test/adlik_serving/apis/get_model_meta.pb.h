// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adlik_serving/apis/get_model_meta.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "adlik_serving/framework/domain/model_spec.pb.h"
#include "adlik_serving/framework/domain/model_config.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto;
namespace adlik {
namespace serving {
class GetModelMetaRequest;
class GetModelMetaRequestDefaultTypeInternal;
extern GetModelMetaRequestDefaultTypeInternal _GetModelMetaRequest_default_instance_;
class GetModelMetaResponse;
class GetModelMetaResponseDefaultTypeInternal;
extern GetModelMetaResponseDefaultTypeInternal _GetModelMetaResponse_default_instance_;
class GetModelMetaResponse_VersionStatusEntry_DoNotUse;
class GetModelMetaResponse_VersionStatusEntry_DoNotUseDefaultTypeInternal;
extern GetModelMetaResponse_VersionStatusEntry_DoNotUseDefaultTypeInternal _GetModelMetaResponse_VersionStatusEntry_DoNotUse_default_instance_;
class ModelVersionStatus;
class ModelVersionStatusDefaultTypeInternal;
extern ModelVersionStatusDefaultTypeInternal _ModelVersionStatus_default_instance_;
}  // namespace serving
}  // namespace adlik
PROTOBUF_NAMESPACE_OPEN
template<> ::adlik::serving::GetModelMetaRequest* Arena::CreateMaybeMessage<::adlik::serving::GetModelMetaRequest>(Arena*);
template<> ::adlik::serving::GetModelMetaResponse* Arena::CreateMaybeMessage<::adlik::serving::GetModelMetaResponse>(Arena*);
template<> ::adlik::serving::GetModelMetaResponse_VersionStatusEntry_DoNotUse* Arena::CreateMaybeMessage<::adlik::serving::GetModelMetaResponse_VersionStatusEntry_DoNotUse>(Arena*);
template<> ::adlik::serving::ModelVersionStatus* Arena::CreateMaybeMessage<::adlik::serving::ModelVersionStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace adlik {
namespace serving {

enum ModelReadyState : int {
  MODEL_UNKNOWN = 0,
  MODEL_READY = 1,
  MODEL_UNAVAILABLE = 2,
  MODEL_LOADING = 3,
  MODEL_UNLOADING = 4,
  ModelReadyState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ModelReadyState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ModelReadyState_IsValid(int value);
constexpr ModelReadyState ModelReadyState_MIN = MODEL_UNKNOWN;
constexpr ModelReadyState ModelReadyState_MAX = MODEL_UNLOADING;
constexpr int ModelReadyState_ARRAYSIZE = ModelReadyState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ModelReadyState_descriptor();
template<typename T>
inline const std::string& ModelReadyState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ModelReadyState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ModelReadyState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ModelReadyState_descriptor(), enum_t_value);
}
inline bool ModelReadyState_Parse(
    const std::string& name, ModelReadyState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ModelReadyState>(
    ModelReadyState_descriptor(), name, value);
}
// ===================================================================

class ModelVersionStatus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:adlik.serving.ModelVersionStatus) */ {
 public:
  ModelVersionStatus();
  virtual ~ModelVersionStatus();

  ModelVersionStatus(const ModelVersionStatus& from);
  ModelVersionStatus(ModelVersionStatus&& from) noexcept
    : ModelVersionStatus() {
    *this = ::std::move(from);
  }

  inline ModelVersionStatus& operator=(const ModelVersionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelVersionStatus& operator=(ModelVersionStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModelVersionStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelVersionStatus* internal_default_instance() {
    return reinterpret_cast<const ModelVersionStatus*>(
               &_ModelVersionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ModelVersionStatus& a, ModelVersionStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelVersionStatus* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelVersionStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModelVersionStatus* New() const final {
    return CreateMaybeMessage<ModelVersionStatus>(nullptr);
  }

  ModelVersionStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModelVersionStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModelVersionStatus& from);
  void MergeFrom(const ModelVersionStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelVersionStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "adlik.serving.ModelVersionStatus";
  }
  protected:
  explicit ModelVersionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto);
    return ::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReadyStateFieldNumber = 1,
  };
  // .adlik.serving.ModelReadyState ready_state = 1;
  void clear_ready_state();
  ::adlik::serving::ModelReadyState ready_state() const;
  void set_ready_state(::adlik::serving::ModelReadyState value);

  // @@protoc_insertion_point(class_scope:adlik.serving.ModelVersionStatus)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int ready_state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class GetModelMetaRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:adlik.serving.GetModelMetaRequest) */ {
 public:
  GetModelMetaRequest();
  virtual ~GetModelMetaRequest();

  GetModelMetaRequest(const GetModelMetaRequest& from);
  GetModelMetaRequest(GetModelMetaRequest&& from) noexcept
    : GetModelMetaRequest() {
    *this = ::std::move(from);
  }

  inline GetModelMetaRequest& operator=(const GetModelMetaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModelMetaRequest& operator=(GetModelMetaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetModelMetaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetModelMetaRequest* internal_default_instance() {
    return reinterpret_cast<const GetModelMetaRequest*>(
               &_GetModelMetaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetModelMetaRequest& a, GetModelMetaRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModelMetaRequest* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModelMetaRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetModelMetaRequest* New() const final {
    return CreateMaybeMessage<GetModelMetaRequest>(nullptr);
  }

  GetModelMetaRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetModelMetaRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetModelMetaRequest& from);
  void MergeFrom(const GetModelMetaRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModelMetaRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "adlik.serving.GetModelMetaRequest";
  }
  protected:
  explicit GetModelMetaRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto);
    return ::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelSpecFieldNumber = 1,
  };
  // .adlik.serving.ModelSpec model_spec = 1;
  bool has_model_spec() const;
  void clear_model_spec();
  const ::adlik::serving::ModelSpec& model_spec() const;
  ::adlik::serving::ModelSpec* release_model_spec();
  ::adlik::serving::ModelSpec* mutable_model_spec();
  void set_allocated_model_spec(::adlik::serving::ModelSpec* model_spec);
  void unsafe_arena_set_allocated_model_spec(
      ::adlik::serving::ModelSpec* model_spec);
  ::adlik::serving::ModelSpec* unsafe_arena_release_model_spec();

  // @@protoc_insertion_point(class_scope:adlik.serving.GetModelMetaRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::adlik::serving::ModelSpec* model_spec_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class GetModelMetaResponse_VersionStatusEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetModelMetaResponse_VersionStatusEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetModelMetaResponse_VersionStatusEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  GetModelMetaResponse_VersionStatusEntry_DoNotUse();
  GetModelMetaResponse_VersionStatusEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetModelMetaResponse_VersionStatusEntry_DoNotUse& other);
  static const GetModelMetaResponse_VersionStatusEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetModelMetaResponse_VersionStatusEntry_DoNotUse*>(&_GetModelMetaResponse_VersionStatusEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto);
    return ::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class GetModelMetaResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:adlik.serving.GetModelMetaResponse) */ {
 public:
  GetModelMetaResponse();
  virtual ~GetModelMetaResponse();

  GetModelMetaResponse(const GetModelMetaResponse& from);
  GetModelMetaResponse(GetModelMetaResponse&& from) noexcept
    : GetModelMetaResponse() {
    *this = ::std::move(from);
  }

  inline GetModelMetaResponse& operator=(const GetModelMetaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetModelMetaResponse& operator=(GetModelMetaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetModelMetaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetModelMetaResponse* internal_default_instance() {
    return reinterpret_cast<const GetModelMetaResponse*>(
               &_GetModelMetaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetModelMetaResponse& a, GetModelMetaResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetModelMetaResponse* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetModelMetaResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetModelMetaResponse* New() const final {
    return CreateMaybeMessage<GetModelMetaResponse>(nullptr);
  }

  GetModelMetaResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetModelMetaResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetModelMetaResponse& from);
  void MergeFrom(const GetModelMetaResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetModelMetaResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "adlik.serving.GetModelMetaResponse";
  }
  protected:
  explicit GetModelMetaResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto);
    return ::descriptor_table_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kVersionStatusFieldNumber = 3,
    kModelSpecFieldNumber = 1,
    kConfigFieldNumber = 2,
  };
  // map<uint32, .adlik.serving.ModelVersionStatus> version_status = 3;
  int version_status_size() const;
  void clear_version_status();
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus >&
      version_status() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus >*
      mutable_version_status();

  // .adlik.serving.ModelSpec model_spec = 1;
  bool has_model_spec() const;
  void clear_model_spec();
  const ::adlik::serving::ModelSpec& model_spec() const;
  ::adlik::serving::ModelSpec* release_model_spec();
  ::adlik::serving::ModelSpec* mutable_model_spec();
  void set_allocated_model_spec(::adlik::serving::ModelSpec* model_spec);
  void unsafe_arena_set_allocated_model_spec(
      ::adlik::serving::ModelSpec* model_spec);
  ::adlik::serving::ModelSpec* unsafe_arena_release_model_spec();

  // .adlik.serving.ModelConfigProto config = 2;
  bool has_config() const;
  void clear_config();
  const ::adlik::serving::ModelConfigProto& config() const;
  ::adlik::serving::ModelConfigProto* release_config();
  ::adlik::serving::ModelConfigProto* mutable_config();
  void set_allocated_config(::adlik::serving::ModelConfigProto* config);
  void unsafe_arena_set_allocated_config(
      ::adlik::serving::ModelConfigProto* config);
  ::adlik::serving::ModelConfigProto* unsafe_arena_release_config();

  // @@protoc_insertion_point(class_scope:adlik.serving.GetModelMetaResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetModelMetaResponse_VersionStatusEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
      0 > version_status_;
  ::adlik::serving::ModelSpec* model_spec_;
  ::adlik::serving::ModelConfigProto* config_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ModelVersionStatus

// .adlik.serving.ModelReadyState ready_state = 1;
inline void ModelVersionStatus::clear_ready_state() {
  ready_state_ = 0;
}
inline ::adlik::serving::ModelReadyState ModelVersionStatus::ready_state() const {
  // @@protoc_insertion_point(field_get:adlik.serving.ModelVersionStatus.ready_state)
  return static_cast< ::adlik::serving::ModelReadyState >(ready_state_);
}
inline void ModelVersionStatus::set_ready_state(::adlik::serving::ModelReadyState value) {
  
  ready_state_ = value;
  // @@protoc_insertion_point(field_set:adlik.serving.ModelVersionStatus.ready_state)
}

// -------------------------------------------------------------------

// GetModelMetaRequest

// .adlik.serving.ModelSpec model_spec = 1;
inline bool GetModelMetaRequest::has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != nullptr;
}
inline const ::adlik::serving::ModelSpec& GetModelMetaRequest::model_spec() const {
  const ::adlik::serving::ModelSpec* p = model_spec_;
  // @@protoc_insertion_point(field_get:adlik.serving.GetModelMetaRequest.model_spec)
  return p != nullptr ? *p : *reinterpret_cast<const ::adlik::serving::ModelSpec*>(
      &::adlik::serving::_ModelSpec_default_instance_);
}
inline ::adlik::serving::ModelSpec* GetModelMetaRequest::release_model_spec() {
  // @@protoc_insertion_point(field_release:adlik.serving.GetModelMetaRequest.model_spec)
  
  ::adlik::serving::ModelSpec* temp = model_spec_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  model_spec_ = nullptr;
  return temp;
}
inline ::adlik::serving::ModelSpec* GetModelMetaRequest::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:adlik.serving.GetModelMetaRequest.model_spec)
  
  ::adlik::serving::ModelSpec* temp = model_spec_;
  model_spec_ = nullptr;
  return temp;
}
inline ::adlik::serving::ModelSpec* GetModelMetaRequest::mutable_model_spec() {
  
  if (model_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::adlik::serving::ModelSpec>(GetArenaNoVirtual());
    model_spec_ = p;
  }
  // @@protoc_insertion_point(field_mutable:adlik.serving.GetModelMetaRequest.model_spec)
  return model_spec_;
}
inline void GetModelMetaRequest::set_allocated_model_spec(::adlik::serving::ModelSpec* model_spec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec_);
  }
  if (model_spec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec)->GetArena();
    if (message_arena != submessage_arena) {
      model_spec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_spec, submessage_arena);
    }
    
  } else {
    
  }
  model_spec_ = model_spec;
  // @@protoc_insertion_point(field_set_allocated:adlik.serving.GetModelMetaRequest.model_spec)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetModelMetaResponse

// .adlik.serving.ModelSpec model_spec = 1;
inline bool GetModelMetaResponse::has_model_spec() const {
  return this != internal_default_instance() && model_spec_ != nullptr;
}
inline const ::adlik::serving::ModelSpec& GetModelMetaResponse::model_spec() const {
  const ::adlik::serving::ModelSpec* p = model_spec_;
  // @@protoc_insertion_point(field_get:adlik.serving.GetModelMetaResponse.model_spec)
  return p != nullptr ? *p : *reinterpret_cast<const ::adlik::serving::ModelSpec*>(
      &::adlik::serving::_ModelSpec_default_instance_);
}
inline ::adlik::serving::ModelSpec* GetModelMetaResponse::release_model_spec() {
  // @@protoc_insertion_point(field_release:adlik.serving.GetModelMetaResponse.model_spec)
  
  ::adlik::serving::ModelSpec* temp = model_spec_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  model_spec_ = nullptr;
  return temp;
}
inline ::adlik::serving::ModelSpec* GetModelMetaResponse::unsafe_arena_release_model_spec() {
  // @@protoc_insertion_point(field_unsafe_arena_release:adlik.serving.GetModelMetaResponse.model_spec)
  
  ::adlik::serving::ModelSpec* temp = model_spec_;
  model_spec_ = nullptr;
  return temp;
}
inline ::adlik::serving::ModelSpec* GetModelMetaResponse::mutable_model_spec() {
  
  if (model_spec_ == nullptr) {
    auto* p = CreateMaybeMessage<::adlik::serving::ModelSpec>(GetArenaNoVirtual());
    model_spec_ = p;
  }
  // @@protoc_insertion_point(field_mutable:adlik.serving.GetModelMetaResponse.model_spec)
  return model_spec_;
}
inline void GetModelMetaResponse::set_allocated_model_spec(::adlik::serving::ModelSpec* model_spec) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec_);
  }
  if (model_spec) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_spec)->GetArena();
    if (message_arena != submessage_arena) {
      model_spec = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model_spec, submessage_arena);
    }
    
  } else {
    
  }
  model_spec_ = model_spec;
  // @@protoc_insertion_point(field_set_allocated:adlik.serving.GetModelMetaResponse.model_spec)
}

// .adlik.serving.ModelConfigProto config = 2;
inline bool GetModelMetaResponse::has_config() const {
  return this != internal_default_instance() && config_ != nullptr;
}
inline const ::adlik::serving::ModelConfigProto& GetModelMetaResponse::config() const {
  const ::adlik::serving::ModelConfigProto* p = config_;
  // @@protoc_insertion_point(field_get:adlik.serving.GetModelMetaResponse.config)
  return p != nullptr ? *p : *reinterpret_cast<const ::adlik::serving::ModelConfigProto*>(
      &::adlik::serving::_ModelConfigProto_default_instance_);
}
inline ::adlik::serving::ModelConfigProto* GetModelMetaResponse::release_config() {
  // @@protoc_insertion_point(field_release:adlik.serving.GetModelMetaResponse.config)
  
  ::adlik::serving::ModelConfigProto* temp = config_;
  if (GetArenaNoVirtual() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  config_ = nullptr;
  return temp;
}
inline ::adlik::serving::ModelConfigProto* GetModelMetaResponse::unsafe_arena_release_config() {
  // @@protoc_insertion_point(field_unsafe_arena_release:adlik.serving.GetModelMetaResponse.config)
  
  ::adlik::serving::ModelConfigProto* temp = config_;
  config_ = nullptr;
  return temp;
}
inline ::adlik::serving::ModelConfigProto* GetModelMetaResponse::mutable_config() {
  
  if (config_ == nullptr) {
    auto* p = CreateMaybeMessage<::adlik::serving::ModelConfigProto>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:adlik.serving.GetModelMetaResponse.config)
  return config_;
}
inline void GetModelMetaResponse::set_allocated_config(::adlik::serving::ModelConfigProto* config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(config_);
  }
  if (config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(config)->GetArena();
    if (message_arena != submessage_arena) {
      config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:adlik.serving.GetModelMetaResponse.config)
}

// map<uint32, .adlik.serving.ModelVersionStatus> version_status = 3;
inline int GetModelMetaResponse::version_status_size() const {
  return version_status_.size();
}
inline void GetModelMetaResponse::clear_version_status() {
  version_status_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus >&
GetModelMetaResponse::version_status() const {
  // @@protoc_insertion_point(field_map:adlik.serving.GetModelMetaResponse.version_status)
  return version_status_.GetMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::adlik::serving::ModelVersionStatus >*
GetModelMetaResponse::mutable_version_status() {
  // @@protoc_insertion_point(field_mutable_map:adlik.serving.GetModelMetaResponse.version_status)
  return version_status_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace serving
}  // namespace adlik

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::adlik::serving::ModelReadyState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::adlik::serving::ModelReadyState>() {
  return ::adlik::serving::ModelReadyState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_adlik_5fserving_2fapis_2fget_5fmodel_5fmeta_2eproto
